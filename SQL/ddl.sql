-- Generated by Oracle SQL Developer Data Modeler 24.3.1.351.0831
--   at:        2025-03-23 16:26:30 GMT-04:00
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

--------------------------------------------------------


-- Drop Trigger
BEGIN
EXECUTE IMMEDIATE 'DROP TRIGGER Prescription_Drugs_Prescriptio';
EXCEPTION
WHEN OTHERS THEN
IF SQLCODE != -4080 THEN
RAISE;
END IF;
END;
/

-- Drop Sequence
BEGIN
EXECUTE IMMEDIATE 'DROP SEQUENCE Prescription_Drugs_Prescriptio';
EXCEPTION
WHEN OTHERS THEN
IF SQLCODE != -2289 THEN
RAISE;
END IF;
END;
/

-- Drop Tables in reverse dependency order
BEGIN EXECUTE IMMEDIATE 'DROP TABLE Inventory_Logs CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE Sales_Transactions CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE Prescription_Drugs CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE Prescriptions CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE Patients CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE Doctors CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE Users CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE Suppliers CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE Drugs CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE Payment_Method CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/
BEGIN EXECUTE IMMEDIATE 'DROP TABLE Catagory CASCADE CONSTRAINTS';
EXCEPTION WHEN OTHERS THEN IF SQLCODE != -942 THEN RAISE; END IF; END;
/



----------------------------------------------------------
CREATE TABLE Catagory 
    ( 
     Catagory_ID   INTEGER  NOT NULL , 
     Catagory_Name VARCHAR2 (255)  NOT NULL , 
     Created_On    TIMESTAMP  NOT NULL , 
     Created_By    INTEGER  NOT NULL , 
     Updated_On    TIMESTAMP , 
     Updated_By    INTEGER 
    ) 
;

ALTER TABLE Catagory 
    ADD CONSTRAINT Catagory_PK PRIMARY KEY ( Catagory_ID ) ;

CREATE TABLE Doctors 
    ( 
     Doctor_ID             INTEGER  NOT NULL , 
     Doctor_First_Name     VARCHAR2 (255)  NOT NULL , 
     Doctor_Last_Name      VARCHAR2 (255) , 
     Specialization        VARCHAR2 (100) , 
     Doctor_Contact_Number VARCHAR2 (15) , 
     Doctor_Email          VARCHAR2 (100) , 
     Created_On            TIMESTAMP  NOT NULL , 
     Created_By            INTEGER  NOT NULL , 
     Updated_On            TIMESTAMP , 
     Updated_By            INTEGER 
    ) 
;

ALTER TABLE Doctors 
    ADD CONSTRAINT Doctors_PK PRIMARY KEY ( Doctor_ID ) ;

CREATE TABLE Drugs 
    ( 
     Drug_ID               NUMBER  NOT NULL , 
     Drug_Name             VARCHAR2 (255)  NOT NULL , 
     Batch_Number          VARCHAR2 (50)  NOT NULL , 
     Expiry_Date           DATE  NOT NULL , 
     Price                 NUMBER , 
     Stock_Quantity        INTEGER  NOT NULL , 
     Suppliers_Supplier_ID INTEGER  NOT NULL , 
     Catagory_Catagory_ID  INTEGER  NOT NULL , 
     Created_On            TIMESTAMP  NOT NULL , 
     Created_By            INTEGER  NOT NULL , 
     Updated_On            TIMESTAMP , 
     Updated_By            INTEGER 
    ) 
;

ALTER TABLE Drugs 
    ADD CONSTRAINT Drugs_PK PRIMARY KEY ( Drug_ID ) ;

CREATE TABLE Inventory_Logs 
    ( 
     Log_ID        INTEGER  NOT NULL , 
     Change_Type   VARCHAR2 (50)  NOT NULL , 
     Change_Amount INTEGER  NOT NULL , 
     Change_Date   TIMESTAMP , 
     Drugs_Drug_ID NUMBER  NOT NULL , 
     Users_User_ID INTEGER  NOT NULL 
    ) 
;

ALTER TABLE Inventory_Logs 
    ADD CONSTRAINT Inventory_Logs_PK PRIMARY KEY ( Log_ID ) ;

CREATE TABLE Patients 
    ( 
     Patient_ID             INTEGER  NOT NULL , 
     Patient_First_Name     VARCHAR2 (255)  NOT NULL , 
     Patient_Contact_Number VARCHAR2 (15) , 
     Patient_Email          VARCHAR2 (100) , 
     Patient_street         VARCHAR2 (50) , 
     Patient_Last_Name      VARCHAR2 (255)  NOT NULL , 
     Patient_city           VARCHAR2 (50) , 
     Patient_state          VARCHAR2 (50) , 
     Patient_zipcode        INTEGER , 
     Created_On             TIMESTAMP  NOT NULL , 
     Created_By             INTEGER  NOT NULL , 
     Updated_On             TIMESTAMP , 
     Updated_By             INTEGER 
    ) 
;

ALTER TABLE Patients 
    ADD CONSTRAINT Patients_PK PRIMARY KEY ( Patient_ID ) ;

CREATE TABLE Payment_Method 
    ( 
     Payment_ID   INTEGER  NOT NULL , 
     Payment_Type VARCHAR2 (50)  NOT NULL 
    ) 
;

ALTER TABLE Payment_Method 
    ADD CONSTRAINT Payment_Method_PK PRIMARY KEY ( Payment_ID ) ;

CREATE TABLE Prescription_Drugs 
    ( 
     Prescription_Drugs_ID         NUMBER  NOT NULL , 
     Quantity                      INTEGER  NOT NULL , 
     Drugs_Drug_ID                 NUMBER  NOT NULL , 
     Prescriptions_Prescription_ID INTEGER 
    ) 
;

ALTER TABLE Prescription_Drugs 
    ADD CONSTRAINT Prescription_Drugs_PK PRIMARY KEY ( Prescription_Drugs_ID ) ;

CREATE TABLE Prescriptions 
    ( 
     Prescription_ID     INTEGER  NOT NULL , 
     Date_Issue          DATE  NOT NULL , 
     Status              VARCHAR2 (50) , 
     Doctors_Doctor_ID   INTEGER  NOT NULL , 
     Patients_Patient_ID INTEGER  NOT NULL , 
     Created_On          TIMESTAMP  NOT NULL , 
     Created_By          INTEGER  NOT NULL , 
     Updated_On          TIMESTAMP , 
     Updated_By          INTEGER 
    ) 
;

ALTER TABLE Prescriptions 
    ADD CONSTRAINT Prescriptions_PK PRIMARY KEY ( Prescription_ID ) ;

CREATE TABLE Sales_Transactions 
    ( 
     Transaction_ID INTEGER  NOT NULL , 
     Payment_ID     INTEGER  NOT NULL , 
     Date_Timestamp TIMESTAMP , 
     Quantity_Sold  INTEGER  NOT NULL , 
     Total_Price    NUMBER (10,2)  NOT NULL , 
     Drugs_Drug_ID  NUMBER  NOT NULL , 
     Users_User_ID  INTEGER  NOT NULL , 
     Created_On     TIMESTAMP  NOT NULL , 
     Created_By     INTEGER  NOT NULL , 
     Updated_On     TIMESTAMP , 
     Updated_By     INTEGER 
    ) 
;

ALTER TABLE Sales_Transactions 
    ADD CONSTRAINT Sales_Transactions_PK PRIMARY KEY ( Transaction_ID ) ;

CREATE TABLE Suppliers 
    ( 
     Supplier_ID             INTEGER  NOT NULL , 
     Supplier_Name           VARCHAR2 (255)  NOT NULL , 
     Supplier_Contact_Number VARCHAR2 (15) , 
     Supplier_Email          VARCHAR2 (100) , 
     Supplier_street         VARCHAR2 (100) , 
     Supplier_state          VARCHAR2 (50) , 
     Supplier_zipcode        INTEGER , 
     Supplier_city           VARCHAR2 (100) , 
     Created_On              TIMESTAMP  NOT NULL , 
     Created_By              INTEGER  NOT NULL , 
     Updated_On              TIMESTAMP , 
     Updated_By              INTEGER 
    ) 
;

ALTER TABLE Suppliers 
    ADD CONSTRAINT Suppliers_PK PRIMARY KEY ( Supplier_ID ) ;

CREATE TABLE Users 
    ( 
     User_ID             INTEGER  NOT NULL , 
     User_Name           VARCHAR2 (255)  NOT NULL , 
     Role                VARCHAR2 (50)  NOT NULL , 
     User_Contact_Number VARCHAR2 (15) , 
     User_Email          VARCHAR2 (100)  NOT NULL , 
     User_Password       VARCHAR2 (255)  NOT NULL , 
     Created_On          TIMESTAMP  NOT NULL , 
     Created_By          INTEGER  NOT NULL , 
     Updated_On          TIMESTAMP , 
     Updated_By          INTEGER 
    ) 
;

ALTER TABLE Users 
    ADD CONSTRAINT Users_PK PRIMARY KEY ( User_ID ) ;

ALTER TABLE Drugs 
    ADD CONSTRAINT Drugs_Catagory_FK FOREIGN KEY 
    ( 
     Catagory_Catagory_ID
    ) 
    REFERENCES Catagory 
    ( 
     Catagory_ID
    ) 
;

ALTER TABLE Drugs 
    ADD CONSTRAINT Drugs_Suppliers_FK FOREIGN KEY 
    ( 
     Suppliers_Supplier_ID
    ) 
    REFERENCES Suppliers 
    ( 
     Supplier_ID
    ) 
;

ALTER TABLE Inventory_Logs 
    ADD CONSTRAINT Inventory_Logs_Drugs_FK FOREIGN KEY 
    ( 
     Drugs_Drug_ID
    ) 
    REFERENCES Drugs 
    ( 
     Drug_ID
    ) 
;

ALTER TABLE Inventory_Logs 
    ADD CONSTRAINT Inventory_Logs_Users_FK FOREIGN KEY 
    ( 
     Users_User_ID
    ) 
    REFERENCES Users 
    ( 
     User_ID
    ) 
;

ALTER TABLE Prescription_Drugs 
    ADD CONSTRAINT Prescription_Drugs_Drugs_FK FOREIGN KEY 
    ( 
     Drugs_Drug_ID
    ) 
    REFERENCES Drugs 
    ( 
     Drug_ID
    ) 
;

ALTER TABLE Prescription_Drugs 
    ADD CONSTRAINT Prescription_Drugs_Pre_FK FOREIGN KEY 
    ( 
     Prescriptions_Prescription_ID
    ) 
    REFERENCES Prescriptions 
    ( 
     Prescription_ID
    ) 
;

ALTER TABLE Prescriptions 
    ADD CONSTRAINT Prescriptions_Doctors_FK FOREIGN KEY 
    ( 
     Doctors_Doctor_ID
    ) 
    REFERENCES Doctors 
    ( 
     Doctor_ID
    ) 
;

ALTER TABLE Prescriptions 
    ADD CONSTRAINT Prescriptions_Patients_FK FOREIGN KEY 
    ( 
     Patients_Patient_ID
    ) 
    REFERENCES Patients 
    ( 
     Patient_ID
    ) 
;

ALTER TABLE Sales_Transactions 
    ADD CONSTRAINT Sales_Transactions_Drugs_FK FOREIGN KEY 
    ( 
     Drugs_Drug_ID
    ) 
    REFERENCES Drugs 
    ( 
     Drug_ID
    ) 
;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE Sales_Transactions 
    ADD CONSTRAINT ST_PM_FK FOREIGN KEY 
    ( 
     Payment_ID
    ) 
    REFERENCES Payment_Method 
    ( 
     Payment_ID
    ) 
;

ALTER TABLE Sales_Transactions 
    ADD CONSTRAINT Sales_Transactions_Users_FK FOREIGN KEY 
    ( 
     Users_User_ID
    ) 
    REFERENCES Users 
    ( 
     User_ID
    ) 
;

CREATE SEQUENCE Prescription_Drugs_Prescriptio 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER Prescription_Drugs_Prescriptio 
BEFORE INSERT ON Prescription_Drugs 
FOR EACH ROW 
WHEN (NEW.Prescription_Drugs_ID IS NULL) 
BEGIN 
    :NEW.Prescription_Drugs_ID := Prescription_Drugs_Prescriptio.NEXTVAL; 
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            11
-- CREATE INDEX                             0
-- ALTER TABLE                             22
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           1
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          1
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   1
-- WARNINGS                                 0
